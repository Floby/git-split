#!/bin/bash

SUPER_REPO=$1
SUBPATH=$2

# setup some path vars for our little project
SPLIT_BIN_DIR=$(dirname $0)
# if the dir is . then git-split is in the $PATH and likely to be symlinked
if [ $SPLIT_BIN_DIR != "." ]; then
    SPLIT_BIN_DIR=$(pwd)/$SPLIT_BIN_DIR
else
    SPLIT_BIN_DIR=$(dirname $(realpath $(which $0))) 
fi
SPLIT_ROOT=$SPLIT_BIN_DIR/..
SPLIT_LIB_DIR=$SPLIT_ROOT/lib

# source our libs
. $SPLIT_LIB_DIR/all.sh

# we change the working directory to the main repository
cd $SUPER_REPO;
SUPER_REPO=`pwd`
# test if the thing we're trying to split apart exists at all
test -d $SUBPATH || die_usage 2 "no such subpath: $SUBPATH"
# initialize git repository in subpath
cd $SUBPATH
    git init
    SUB_REPO=`pwd`
cd - >/dev/null

new_head=$(translate_commit `deref_commit HEAD` $SUB_REPO $SUBPATH)
cd $SUB_REPO
    git branch master $new_head
    git read-tree master
cd - >/dev/null

