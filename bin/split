#!/bin/bash

SUPER_REPO=$1
SUBPATH=$2

# setup some path vars for our little project
SPLIT_BIN_DIR=$(dirname $0)
# if the dir is . then git-split is in the $PATH and likely to be symlinked
if [ $SPLIT_BIN_DIR != "." ]; then
    SPLIT_BIN_DIR=$(pwd)/$SPLIT_BIN_DIR
else
    SPLIT_BIN_DIR=$(dirname $(realpath $(which $0))) 
fi
SPLIT_ROOT=$SPLIT_BIN_DIR/..
SPLIT_LIB_DIR=$SPLIT_ROOT/lib

# source our libs
. $SPLIT_LIB_DIR/all.sh




# we change de working directory to the super repository
cd $SUPER_REPO;
# test if the thing we're trying to split apart exists at all
test -d $SUBPATH || die "no such subpath: $SUBPATH"

# intialize these two
current_tree=`get_subpath_tree HEAD`
previous_commit=`deref_commit HEAD`

for commit in `git rev-list HEAD` ; do
    subtree=`get_subpath_tree $commit $SUBPATH`

    if [ "$current_tree" = "$subtree" ] ; then
        previous_commit=$commit
        continue
    fi
    current_tree=$subtree

    echo keeping commit $previous_commit
    git cat-file -p $previous_commit | sed -n '/^$/,$p' | tail -n +2
    echo

    previous_commit=$commit
done
